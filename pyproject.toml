[project]
name = "massive-devops"
version = "0.0.1"
description = "MassiveDevops : Devops tools for MassiveDataScope"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    { name = "MassiveDataScope" },
]

license = { file = "LICENSE" }

keywords = [
    "ci",
    "cd",
    "devops",
    "tools",
    "github",
]

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "docs/_build",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
    "T20", # flake8-print
    "SIM", # flake8-simplify
    "ARG", # flake8-unused-arguments
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PL", # pylint
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "PLR0913", # too many arguments
    "PLR0912", # too many branches
    "PLR0915", # too many statements
    "PLR2004", # magic value used in comparison - ALLOWED
    "PLW2901", # for loop variable overwritten by assignment target - ALLOWED
    "T201", # print found - ALLOWED for CLI tools
    "B007", # loop control variable not used within loop body - ALLOWED
    "ARG001", # unused function argument - ALLOWED
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["PLR2004", "S101", "T20"]
"scripts/*" = ["T20"]

[tool.ruff.lint.isort]
known-first-party = ["massive_devops"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "jinja2.*",
    "bandit.*",
    "pytest.*",
    "coverage.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "migrations", "docs"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_subprocess

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

[tool.semantic_branch]
prerelease = [
    "hotfix/.*",
    "feature/.*",
    "feat/.*",
    "multifeature/.*",
    "breaking/.*",
    "feat!/.*",
    "fix/.*",
]
patch = [
    "hotfix/.*",
    "fix/.*",
]
minor = [
    "feature/.*",
    "feat/.*",
    "multifeature/.*",
]
major = [
    "breaking/.*",
    "feat!/.*",
]
prerelease_ignore = [
    "docs/.*",
]
release_ignore = [
    "wip/.*",
    "docs/.*",
    "chore/.*",
]
