name: "Docs Build & Deploy"
description: "Generate Sphinx documentation and either upload artifact (PR) or deploy to GitHub Pages (release)."

inputs:
  src-dir:
    description: "Path to source code directory (for sphinx-apidoc)"
    required: false
    default: "src"
  docs-dir:
    description: "Path to documentation directory"
    required: false
    default: "docs"
  mode:
    description: "Mode: pr or release"
    required: true
outputs:
  page-url:
    description: "URL of the deployed GitHub Pages site"
    value: ${{ steps.deployment.outputs.page_url }}

runs:
  using: "composite"
  steps:

    - name: Install doc dependencies
      uses: ./actions/python/uv-requirements
      with:
        requirements: ${{ github.action_path }}/requirements.txt

    - name: Generate API docs & build HTML docs
      shell: bash
      run: |
        uv run sphinx-apidoc -o ${{ inputs.docs-dir }}/api ${{ inputs.src-dir }} --force
        uv run sphinx-build -b html ${{ inputs.docs-dir }} ${{ inputs.docs-dir }}/_build/html

    - name: Normalize docs (remove symlinks/hardlinks)
      shell: bash
      run: |
        echo "ðŸ”Ž Normalizing symlinks/hardlinks in built docs..."
        find ${{ inputs.docs-dir }}/_build/html -type l -print -exec bash -c '
          target=$(readlink -f "$0")
          rm "$0"
          cp --remove-destination "$target" "$0"
        ' {} \;
        echo "âœ… Normalization complete"

    - name: List built docs
      shell: bash
      run: ls -lR ${{ inputs.docs-dir }}/_build/html

    - name: Upload docs artifact
      if: ${{ inputs.mode == 'release' }}
      uses: actions/upload-pages-artifact@v3
      with:
        path: ${{ inputs.docs-dir }}/_build/html

    - name: Deploy to GitHub Pages
      if: ${{ inputs.mode == 'release' }}
      id: deployment
      uses: actions/deploy-pages@v4
